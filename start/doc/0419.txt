1. 데이터 타입
	
논리
	boolean	- 1byte
	
문자
	char	- 2byte
	
정수
	byte	- 1byte
	short	- 2byte
	int		- 4byte
	long	- 8byte
	
실수
	float	- 4byte
	double	- 8byte
	
	
2. 변수
	==> 왜 변수를 만들어서 사용하는가?
		메모리에 올려진 데이터의 주소를 기억해놨다가 사용하는것
		
	1) 형식
	
		접근지정자	[속성]	데이터타입	변수이름;
		변수이름 = 데이터;		
			또는
		접근지정자	[속성]	데이터타입	변수이름 = 데이터;
		
	2) 변수의 종류
		
		1. 기본형 변수
			==> 자바의 기본 데이터 타입 8가지중 하나로 변수를 만드는 경우
		
		2. 참조형 변수
			==> 기본형 변수 이외의 모든 변수
				클래스타입의 변수
				Object 타입의 변수에 입력할 수 있다.
				힙에 인스턴스를 만드는 경우 그 주소를 기억하는 변수
				
			예 )
				Integer no = 10;
				
				Object obj = no;
				
		public void abc() {
			int a = 10;
		}
		
		public class Abc {
			int a = 10;
		} ==> 힙에 올라간다.
		
	참고 ]	
		식별자
			자바에서 사용하는 예약어들은 사용하면 안된다.
			특수문자는 _ $ 이외에는 사용할 수 없다.
			시작문자로 숫자를 사용하면 안된다.
			한글을 사용할 수 있지만 알파벳을 사용하기를 권장하고 있다.
				
3. 연산자
	
	산술연산자
	논리연산자
	비교연산자
	증감연산자
	대입연산자
	삼항연산자
	
	
	논리연산자(논리값을 연산하는 연산자)
	
		&
		&&	- 절삭연산 ( 앞이 거짓인 경우는 뒤를 읽어보지도 않는다.)
		|
		||	- 절삭연산 ( 앞이 참인경우는 뒤를 읽어보지도 않는다.)
		
-----------------------------------------------------------------------------------------------------------------------------------
4. 제어문

	반복문
		
		for(int i = 0; i < 10; i++) {
			i가 증가할때마나 나오는 결과 예측해보기
		}
		
		
		
		for(int i = 0; i < 10; i ++ {
			for(int j = 0; j <= i; j++ ) {
			}
		}
*		(0,0)
**		(1,0) (1,1)
***		(2,0) (2,1) (2,2)	
****	(3,0) (3,1) (3,2) (3,3)
*****	(4,0) (4,1) (4,2) (4,3) (4,4)
		
		
1
1 2
1 2 3
1 2 3 4
1 2 3 4 5
		
		
		
	조건문
	
	
5. 함수(Method)

	1) 방법 
		==> 모르겠으면 반환값의 경우는 void로 처리하고 실행시켜본다.
					매개변수의 경우도 아무것도 입력하지 않고 함수를 만들고 호출해본다.
					<== 데이터가 반드시 필요한 경우는 (데이터가 입력이 안되서 엉뚱한 결과가 나오면)
						데이터를 입력받는 것으로 변경한다.
		
			int cnt = pstmt.executeUpdate();
	
	2) static member
	
6. class
	
	형식 ]
		
		접근지정자	[속성]	class	클래스이름 {
			변수;
			함수;
		}
		
		클래스에 사용할 수 있는 접근지정자 : public, 생략








		